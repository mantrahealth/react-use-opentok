{"version":3,"file":"react-use-opentok.esm.min.js","sources":["../src/libs/use-opentok-reducer.js","../src/libs/use-session-event-handler.js","../src/index.js"],"sourcesContent":["import { useReducer, useMemo } from 'react';\n\nconst initialState = {\n  // connection info\n  isSessionInitialized: false,\n  connectionId: undefined,\n  isSessionConnected: false,\n\n  // connected data\n  session: undefined,\n  connections: [],\n  streams: [],\n  subscribers: [],\n  publisher: {},\n};\n\n// ACTION TYPE\nconst UPDATE = 'UPDATE';\nconst ADD_CONNECTION = 'ADD_CONNECTION';\nconst REMOVE_CONNECTION = 'REMOVE_CONNECTION';\nconst ADD_STREAM = 'ADD_STREAM';\nconst REMOVE_STREAM = 'REMOVE_STREAM';\nconst SET_PUBLISHER = 'SET_PUBLISHER';\nconst REMOVE_PUBLISHER = 'REMOVE_PUBLISHER';\nconst ADD_SUBSCRIBER = 'ADD_SUBSCRIBER';\nconst REMOVE_SUBSCRIBER = 'REMOVE_SUBSCRIBER';\n\nconst reducer = (state, action) => {\n  const { type, payload } = action;\n\n  switch (type) {\n    // CONNECT_SUCCESS\n    case UPDATE: {\n      return {\n        ...state,\n        ...payload,\n      };\n    }\n    case ADD_CONNECTION: {\n      return {\n        ...state,\n        connections: [...state.connections, payload],\n      };\n    }\n    case REMOVE_CONNECTION: {\n      return {\n        ...state,\n        connections: [\n          ...state.connections.filter(\n            c => c.connectionId !== payload.connectionId\n          ),\n        ],\n      };\n    }\n    case ADD_STREAM: {\n      return {\n        ...state,\n        streams: [...state.streams, payload],\n      };\n    }\n    case REMOVE_STREAM: {\n      return {\n        ...state,\n        streams: [\n          ...state.streams.filter(s => s.streamId !== payload.streamId),\n        ],\n      };\n    }\n    case SET_PUBLISHER: {\n      const { name, publisher } = payload;\n      return {\n        ...state,\n        publisher: {\n          ...state.publisher,\n          [name]: publisher,\n        },\n      };\n    }\n    case REMOVE_PUBLISHER: {\n      const { name } = payload;\n      return {\n        ...state,\n        publisher: {\n          ...state.publisher,\n          [name]: null,\n        },\n      };\n    }\n    case ADD_SUBSCRIBER: {\n      return {\n        ...state,\n        subscribers: [...state.subscribers, payload],\n      };\n    }\n    case REMOVE_SUBSCRIBER: {\n      return {\n        ...state,\n        subscribers: [\n          ...state.subscribers.filter(s => s.streamId !== payload.streamId),\n        ],\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst useOpenTokReducer = () => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const action = useMemo(\n    () => ({\n      update(payload) {\n        dispatch({\n          type: UPDATE,\n          payload,\n        });\n      },\n      addConnection(connection) {\n        dispatch({\n          type: ADD_CONNECTION,\n          payload: connection,\n        });\n      },\n      removeConnection(connection) {\n        dispatch({\n          type: REMOVE_CONNECTION,\n          payload: connection,\n        });\n      },\n      addStream(stream) {\n        dispatch({\n          type: ADD_STREAM,\n          payload: stream,\n        });\n      },\n      removeStream(stream) {\n        dispatch({\n          type: REMOVE_STREAM,\n          payload: stream,\n        });\n      },\n      setPublisher({ name, publisher }) {\n        dispatch({\n          type: SET_PUBLISHER,\n          payload: { name, publisher },\n        });\n      },\n      removePublisher({ name }) {\n        dispatch({\n          type: REMOVE_PUBLISHER,\n          payload: { name },\n        });\n      },\n      addSubscriber(subscriber) {\n        dispatch({\n          type: ADD_SUBSCRIBER,\n          payload: subscriber,\n        });\n      },\n      removeSubscriber(subscriber) {\n        dispatch({\n          type: REMOVE_SUBSCRIBER,\n          payload: subscriber,\n        });\n      },\n    }),\n    []\n  );\n\n  return [state, action];\n};\n\nexport default useOpenTokReducer;\n","import { useEffect } from 'react';\n\nconst events = [\n  'archiveStarted',\n  'archiveStopped',\n  'connectionCreated',\n  'connectionDestroyed',\n  'sessionConnected',\n  'sessionDisconnected',\n  'sessionReconnected',\n  'sessionReconnecting',\n  'signal',\n  'streamCreated',\n  'streamDestroyed',\n  'streamPropertyChanged',\n];\n\nexport default (type, callback, session) => {\n  const isEventTypeSupported = events.some(e => type.startsWith(e));\n  if (!isEventTypeSupported) {\n    throw new Error('The event type is NOT supported');\n  }\n  if (typeof callback !== 'function') {\n    throw new Error('Incorrect value or type of callback');\n  }\n\n  useEffect(() => {\n    const { sessionId } = session || {};\n    if (typeof sessionId !== 'string') {\n      return;\n    }\n\n    session.on(type, callback);\n    return () => {\n      session.off(type, callback);\n    };\n  }, [session, type, callback]);\n};\n","import { useCallback } from 'react';\nimport useOpenTokReducer from './libs/use-opentok-reducer';\nimport useSessionEventHandler from './libs/use-session-event-handler';\nimport OT from '@opentok/client';\n\n// default options for subscribe and initPublisher\nconst defaultOptions = {\n  insertMode: 'append',\n  width: '100%',\n  height: '100%',\n};\n\nconst useOpenTok = () => {\n  const [state, action] = useOpenTokReducer();\n\n  const {\n    isSessionConnected,\n\n    session,\n    subscribers,\n    publisher,\n\n    streams,\n  } = state;\n\n  const handleConnectionCreated = useCallback(\n    event => {\n      action.addConnection(event.connection);\n    },\n    [action]\n  );\n\n  const handleConnectionDestroyed = useCallback(\n    event => {\n      action.removeConnection(event.connection);\n    },\n    [action]\n  );\n\n  const handleStreamCreated = useCallback(\n    event => {\n      action.addStream(event.stream);\n    },\n    [action]\n  );\n\n  const handleStreamDestroyed = useCallback(\n    event => {\n      action.removeStream(event.stream);\n    },\n    [action]\n  );\n\n  const initSession = useCallback(\n    ({ apiKey, sessionId, sessionOptions }) =>\n      new Promise(resolve => {\n        const session = OT.initSession(apiKey, sessionId, sessionOptions);\n        action.update({ session, isSessionInitialized: true });\n        resolve(session);\n      }),\n    [action]\n  );\n\n  const connectSession = useCallback(\n    (token, sessionToConnect) =>\n      new Promise((resolve, reject) => {\n        if (!token) {\n          return reject('[react-use-opentok] token does not exist.');\n        }\n\n        if (!sessionToConnect) {\n          return reject('[react-use-opentok] session does not exist.');\n        }\n\n        sessionToConnect.connect(token, error => {\n          if (error) {\n            reject(error);\n          } else {\n            const connectionId = sessionToConnect.connection.connectionId;\n            action.update({\n              connectionId,\n              isSessionConnected: true,\n            });\n            resolve(connectionId);\n          }\n        });\n      }),\n    [action]\n  );\n\n  const initSessionAndConnect = useCallback(\n    async ({ apiKey, sessionId, token, sessionOptions }) => {\n      const newSession = await initSession({\n        apiKey,\n        sessionId,\n        sessionOptions,\n      });\n\n      await connectSession(token, newSession);\n    },\n    [connectSession, initSession]\n  );\n\n  const disconnectSession = useCallback(() => {\n    session.disconnect();\n    action.update({\n      connectionId: null,\n      isSessionConnected: false,\n    });\n  }, [action, session]);\n\n  const publish = useCallback(\n    ({ name, element, options }) => {\n      if (publisher[name]) {\n        throw new Error(`The publisher(${name}) is already existed`);\n      }\n      \n      return new Promise((resolve, reject) => {\n        const newPublisher = OT.initPublisher(\n          element,\n          { ...defaultOptions, ...options },\n          (error) => {\n            if (error) {\n              reject(error);\n            }\n          }\n        );\n        resolve(newPublisher);\n      }).then((newPublisher) => {\n        return new Promise((resolve, reject) => {\n          session.publish(newPublisher, error => {\n            if (error) {\n              reject(error);\n            } else {\n              action.setPublisher({\n                name,\n                publisher: newPublisher,\n              });\n              action.addStream(newPublisher.stream);\n              resolve(newPublisher.stream);\n            }\n          });\n        });\n      });\n    },\n    [action, publisher, session]\n  );\n\n  const unpublish = useCallback(\n    ({ name }) => {\n      if (!(publisher && publisher[name])) {\n        throw new Error(`[unpublish] publisher[${name}] is undefined`);\n      }\n\n      const stream = publisher && publisher[name] && publisher[name].stream;\n\n      session.unpublish(publisher[name]);\n      action.removePublisher({ name });\n      action.removeStream(stream);\n    },\n    [action, publisher, session]\n  );\n\n  const subscribe = useCallback(\n    ({ stream, element, options }) => {\n      const { streamId } = stream;\n      const pickedStream = streams.find(s => s.streamId === streamId);\n\n      const subscriber = session.subscribe(pickedStream, element, {\n        ...defaultOptions,\n        ...options,\n      });\n\n      action.addSubscriber(subscriber);\n    },\n    [action, session, streams]\n  );\n\n  const unsubscribe = useCallback(\n    ({ stream }) => {\n      const { streamId } = stream;\n      const subscriber = subscribers.find(\n        subscriber => subscriber.streamId === streamId\n      );\n\n      session.unsubscribe(subscriber);\n      action.removeSubscriber(subscriber);\n    },\n    [action, session, subscribers]\n  );\n\n  const sendSignal = useCallback(\n    ({ type, data, completionHandler }) => {\n      if (!isSessionConnected) {\n        throw new Error('Session is not connected');\n      }\n\n      let signal = { data };\n\n      if (typeof type === 'string' && type.length > 0) {\n        signal.type = type;\n      }\n\n      session.signal(signal, error => {\n        if (error) {\n          console.warn('signal error: ' + error.message);\n        } else if (typeof completionHandler === 'function') {\n          completionHandler();\n        }\n      });\n    },\n    [isSessionConnected, session]\n  );\n\n  useSessionEventHandler('connectionCreated', handleConnectionCreated, session);\n  useSessionEventHandler(\n    'connectionDestroyed',\n    handleConnectionDestroyed,\n    session\n  );\n  useSessionEventHandler('streamCreated', handleStreamCreated, session);\n  useSessionEventHandler('streamDestroyed', handleStreamDestroyed, session);\n\n  return [\n    state,\n    {\n      initSessionAndConnect,\n      initSession,\n      connectSession,\n      disconnectSession,\n      publish,\n      unpublish,\n      subscribe,\n      unsubscribe,\n      sendSignal,\n    },\n  ];\n};\n\nexport default useOpenTok;\n"],"names":["initialState","isSessionInitialized","connectionId","undefined","isSessionConnected","session","connections","streams","subscribers","publisher","reducer","state","action","type","payload","filter","c","s","streamId","name","events","callback","some","e","startsWith","Error","useEffect","sessionId","on","off","defaultOptions","insertMode","width","height","useReducer","dispatch","useMemo","update","addConnection","connection","removeConnection","addStream","stream","removeStream","setPublisher","removePublisher","addSubscriber","subscriber","removeSubscriber","useOpenTokReducer","handleConnectionCreated","useCallback","event","handleConnectionDestroyed","handleStreamCreated","handleStreamDestroyed","initSession","apiKey","sessionOptions","Promise","resolve","OT","connectSession","token","sessionToConnect","reject","connect","error","initSessionAndConnect","newSession","disconnectSession","disconnect","publish","element","options","initPublisher","then","newPublisher","unpublish","subscribe","pickedStream","find","unsubscribe","sendSignal","data","completionHandler","signal","length","console","warn","message","useSessionEventHandler"],"mappings":"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"}